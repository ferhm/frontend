{"version":3,"sources":["./node_modules/capacitor-secure-storage-plugin/dist/esm/web.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAA4C;AACrC,qCAAqC,sDAAS;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AAC+B;AAC/B,+B","file":"node_modules_capacitor-secure-storage-plugin_dist_esm_web_js.js","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class SecureStoragePluginWeb extends WebPlugin {\n    constructor() {\n        super({\n            name: 'SecureStoragePlugin',\n            platforms: ['web'],\n        });\n        this.PREFIX = 'cap_sec_';\n        this.addPrefix = (key) => this.PREFIX + key;\n    }\n    get(options) {\n        return localStorage.getItem(this.addPrefix(options.key)) !== null\n            ? Promise.resolve({\n                value: atob(localStorage.getItem(this.addPrefix(options.key))),\n            })\n            : Promise.reject('Item with given key does not exist');\n    }\n    set(options) {\n        localStorage.setItem(this.addPrefix(options.key), btoa(options.value));\n        return Promise.resolve({ value: true });\n    }\n    remove(options) {\n        localStorage.removeItem(this.addPrefix(options.key));\n        return Promise.resolve({ value: true });\n    }\n    clear() {\n        for (const key in localStorage) {\n            if (key.indexOf(this.PREFIX) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n        return Promise.resolve({ value: true });\n    }\n    keys() {\n        const keys = Object.keys(localStorage).filter((k) => k.indexOf(this.PREFIX) === 0);\n        return Promise.resolve({ value: keys });\n    }\n    getPlatform() {\n        return Promise.resolve({ value: 'web' });\n    }\n}\nconst SecureStoragePlugin = new SecureStoragePluginWeb();\nexport { SecureStoragePlugin };\n//# sourceMappingURL=web.js.map"],"sourceRoot":"webpack:///"}